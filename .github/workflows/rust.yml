name: auxlua
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  check-needs-rebuild:
    outputs:
      needs-rebuild: $ {{ steps.check-modified.outputs.needs-rebuild }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Check Modified Files
        id: check-modified
        run: |
          if '${{ contains(github.event.head_commit.message, '[release]') }}'; then
            echo "::set-output name=needs-rebuild::true"
          else
            echo "::set-output name=needs-rebuild::false"
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file
              do
                echo $file
                if [[ $file == **.rs ]]; then
                  echo "::set-output name=needs-rebuild::true"
                  break
                fi
              done < files.txt
          fi
  build-windows:
    runs-on: windows-latest
    needs: check-needs-rebuild
    if: needs.check-needs-rebuild.outputs.needs-rebuild == 'true'
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          components: rustfmt, clippy
      - name: Clippy (all features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: clippy
          args: --target i686-pc-windows-msvc --all-features --locked -- -D warnings
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: fmt
          args: -- --check
      - name: Build (release) (default features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: build
          args: --target i686-pc-windows-msvc --release
      - uses: actions/upload-artifact@v1
        with:
          name: auxlua.dll
          path: target/i686-pc-windows-msvc/release/auxlua.dll
  build-linux:
    runs-on: ubuntu-latest
    needs: check-needs-rebuild
    if: needs.check-needs-rebuild.outputs.needs-rebuild == 'true'
    env:
      BYOND_MAJOR: 514
      BYOND_MINOR: 1583
      PKG_CONFIG_ALLOW_CROSS: 1
    steps:
      - uses: actions/checkout@v1
      - run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install g++-multilib zlib1g-dev:i386 libssl-dev:i386
          ./scripts/install_byond.sh
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-unknown-linux-gnu
      - name: Check (all features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: check
          args: --target i686-unknown-linux-gnu --all-features
      - name: Build (Debug) (all features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: build
          args: --target i686-unknown-linux-gnu --all-features
      - name: Run tests (all features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: test
          args: --target i686-unknown-linux-gnu --all-features
        env:
          BYOND_BIN: /home/runner/BYOND/byond/bin
      - name: Build (release) (default features)
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: build
          args: --target i686-unknown-linux-gnu --release
      - uses: actions/upload-artifact@v1
        with:
          name: auxlua
          path: target/i686-unknown-linux-gnu/release/libauxlua.so
  release:
    runs-on: ubuntu-latest
    needs: ["build-windows", "build-linux"]
    if: contains(github.event.head_commit.message, '[release]')
    steps:
      - uses: actions/checkout@v1
      - name: Download Artifacts
        id: download_artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Get changelog
        run: |
          VERSION=`grep -Po '(?<=^version = ")([^"]+)' ./Cargo.toml`
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          CHANGELOG_ENTRY=`grep --color=never -m 1 -Po '## \K(\[[0-9\.]+\].*)' CHANGELOG.md`
          DESCRIPTION=`bash ./scripts/extract_changelog.sh $CHANGELOG_ENTRY`
          echo "CHANGELOG_ENTRY=$CHANGELOG_ENTRY" >> $GITHUB_ENV
          echo "CHANGELOG_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "$DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: ${{ env.CHANGELOG_DESCRIPTION }}
      - name: Upload Linux build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_release.download_artifacts.download-path }}/libauxlua.so
          asset_name: libauxlua.so
          asset_content_type: application/octet-stream
      - name: Upload Windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_release.download_artifacts.download-path }}/auxlua.dll
          asset_name: auxlua.dll
          asset_content_type: application/octet-stream
